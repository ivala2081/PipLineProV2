"""Add exchange rate table and update transaction model

Revision ID: b206f1fa6c54
Revises: 
Create Date: 2025-09-01 01:08:17.691370

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b206f1fa6c54'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('translation')
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_employee_company'))
        batch_op.drop_index(batch_op.f('idx_employee_created_at'))
        batch_op.drop_index(batch_op.f('idx_employee_department'))
        batch_op.drop_index(batch_op.f('idx_employee_status'))

    op.drop_table('employee')
    with op.batch_alter_table('reconciliation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_reconciliation_date'))
        batch_op.drop_index(batch_op.f('idx_reconciliation_psp'))
        batch_op.drop_index(batch_op.f('idx_reconciliation_status'))

    op.drop_table('reconciliation')
    with op.batch_alter_table('custom_dictionary', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index(batch_op.f('idx_custom_dict_source_target'))
        batch_op.create_index('idx_custom_dict_source_target', ['source_language', 'target_language', 'source_term'], unique=True)

    with op.batch_alter_table('daily_balance', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('_date_psp_uc'), type_='unique')
        batch_op.drop_index(batch_op.f('idx_daily_balance_date_optimized'))
        batch_op.drop_index(batch_op.f('idx_daily_balance_date_psp_optimized'))
        batch_op.drop_index(batch_op.f('idx_daily_balance_psp_optimized'))
        batch_op.create_unique_constraint('uq_daily_balance_date_psp', ['date', 'psp'])
        batch_op.drop_column('total_deposits')
        batch_op.drop_column('total_withdrawals')

    with op.batch_alter_table('exchange_rate', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_exchange_date'))
        batch_op.drop_index(batch_op.f('idx_exchange_rate_date_optimized'))
        batch_op.drop_index(batch_op.f('idx_exchange_usd'))
        batch_op.create_index('idx_exchange_rate_date', ['date'], unique=False)

    with op.batch_alter_table('exchange_rates', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('bid_price', sa.Numeric(precision=10, scale=4), nullable=True))
        batch_op.add_column(sa.Column('ask_price', sa.Numeric(precision=10, scale=4), nullable=True))
        batch_op.add_column(sa.Column('volume', sa.Numeric(precision=15, scale=2), nullable=True))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('source',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'yfinance'"))
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.drop_index(batch_op.f('idx_exchange_rate_date'))
        batch_op.drop_index(batch_op.f('idx_exchange_rate_date_currency'))
        batch_op.drop_index(batch_op.f('idx_exchange_rate_manual_override'))
        batch_op.drop_index(batch_op.f('idx_exchange_rate_source'))
        batch_op.create_index('idx_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_currency_pair_active', ['currency_pair', 'is_active'], unique=False)
        batch_op.create_index('idx_currency_pair_created', ['currency_pair', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_exchange_rates_currency_pair'), ['currency_pair'], unique=False)
        batch_op.drop_column('override_reason')
        batch_op.drop_column('data_quality')
        batch_op.drop_column('date')
        batch_op.drop_column('is_manual_override')
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('option', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_option_active'))
        batch_op.drop_index(batch_op.f('idx_option_field'))
        batch_op.drop_index(batch_op.f('idx_option_value'))
        batch_op.create_index('idx_option_field_name', ['field_name'], unique=False)
        batch_op.create_index('idx_option_is_active', ['is_active'], unique=False)

    with op.batch_alter_table('psp_track', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_psp_date'))
        batch_op.drop_index(batch_op.f('idx_psp_name'))
        batch_op.drop_index(batch_op.f('idx_psp_name_date'))
        batch_op.drop_index(batch_op.f('idx_psp_track_date_optimized'))
        batch_op.drop_index(batch_op.f('idx_psp_track_date_psp_optimized'))
        batch_op.drop_index(batch_op.f('idx_psp_track_psp_name_optimized'))
        batch_op.create_index('idx_psp_track_date', ['date'], unique=False)
        batch_op.create_index('idx_psp_track_psp_date', ['psp_name', 'date'], unique=False)
        batch_op.create_index('idx_psp_track_psp_name', ['psp_name'], unique=False)

    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_index('idx_transaction_category', ['category'], unique=False)
        batch_op.create_index('idx_transaction_client', ['client_name'], unique=False)
        batch_op.create_index('idx_transaction_company', ['company'], unique=False)
        batch_op.create_index('idx_transaction_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_transaction_created_by', ['created_by'], unique=False)
        batch_op.create_index('idx_transaction_created_by_date', ['created_by', 'date'], unique=False)
        batch_op.create_index('idx_transaction_currency', ['currency'], unique=False)
        batch_op.create_index('idx_transaction_date', ['date'], unique=False)
        batch_op.create_index('idx_transaction_date_category', ['date', 'category'], unique=False)
        batch_op.create_index('idx_transaction_date_currency', ['date', 'currency'], unique=False)
        batch_op.create_index('idx_transaction_date_currency_psp', ['date', 'currency', 'psp'], unique=False)
        batch_op.create_index('idx_transaction_date_psp', ['date', 'psp'], unique=False)
        batch_op.create_index('idx_transaction_date_psp_category', ['date', 'psp', 'category'], unique=False)
        batch_op.create_index('idx_transaction_psp', ['psp'], unique=False)
        batch_op.create_index('idx_transaction_psp_category', ['psp', 'category'], unique=False)

    with op.batch_alter_table('translation_keys', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index(batch_op.f('idx_translation_keys_key_path'))
        batch_op.create_index(batch_op.f('ix_translation_keys_key_path'), ['key_path'], unique=True)

    with op.batch_alter_table('translation_logs', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('details',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_translation_logs_operation'))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('translation_memory', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index(batch_op.f('idx_translation_memory_source_target'))
        batch_op.create_index('idx_translation_memory_source_target', ['source_language', 'target_language', 'source_text'], unique=True)

    with op.batch_alter_table('translation_settings', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('setting_value',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['setting_key'])

    with op.batch_alter_table('translations', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index(batch_op.f('idx_translations_key_language'))
        batch_op.create_index('idx_translation_key_language', ['key_id', 'language_code'], unique=True)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'translation_keys', ['key_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_user_active_optimized'))
        batch_op.drop_index(batch_op.f('idx_user_email_optimized'))
        batch_op.drop_index(batch_op.f('idx_user_username_optimized'))
        batch_op.create_index('idx_user_admin_level', ['admin_level'], unique=False)
        batch_op.create_foreign_key(None, 'user', ['created_by'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index('idx_user_admin_level')
        batch_op.create_index(batch_op.f('idx_user_username_optimized'), ['username'], unique=False)
        batch_op.create_index(batch_op.f('idx_user_email_optimized'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('idx_user_active_optimized'), ['is_active'], unique=False)

    with op.batch_alter_table('translations', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'translation_keys', ['key_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_index('idx_translation_key_language')
        batch_op.create_index(batch_op.f('idx_translations_key_language'), ['key_id', 'language_code'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('translation_settings', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('setting_value',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('translation_memory', schema=None) as batch_op:
        batch_op.drop_index('idx_translation_memory_source_target')
        batch_op.create_index(batch_op.f('idx_translation_memory_source_target'), ['source_language', 'target_language'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('translation_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index(batch_op.f('idx_translation_logs_operation'), ['operation_type', 'created_at'], unique=False)
        batch_op.alter_column('details',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('translation_keys', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_translation_keys_key_path'))
        batch_op.create_index(batch_op.f('idx_translation_keys_key_path'), ['key_path'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_index('idx_transaction_psp_category')
        batch_op.drop_index('idx_transaction_psp')
        batch_op.drop_index('idx_transaction_date_psp_category')
        batch_op.drop_index('idx_transaction_date_psp')
        batch_op.drop_index('idx_transaction_date_currency_psp')
        batch_op.drop_index('idx_transaction_date_currency')
        batch_op.drop_index('idx_transaction_date_category')
        batch_op.drop_index('idx_transaction_date')
        batch_op.drop_index('idx_transaction_currency')
        batch_op.drop_index('idx_transaction_created_by_date')
        batch_op.drop_index('idx_transaction_created_by')
        batch_op.drop_index('idx_transaction_created_at')
        batch_op.drop_index('idx_transaction_company')
        batch_op.drop_index('idx_transaction_client')
        batch_op.drop_index('idx_transaction_category')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('psp_track', schema=None) as batch_op:
        batch_op.drop_index('idx_psp_track_psp_name')
        batch_op.drop_index('idx_psp_track_psp_date')
        batch_op.drop_index('idx_psp_track_date')
        batch_op.create_index(batch_op.f('idx_psp_track_psp_name_optimized'), ['psp_name'], unique=False)
        batch_op.create_index(batch_op.f('idx_psp_track_date_psp_optimized'), ['date', 'psp_name'], unique=False)
        batch_op.create_index(batch_op.f('idx_psp_track_date_optimized'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('idx_psp_name_date'), ['psp_name', 'date'], unique=False)
        batch_op.create_index(batch_op.f('idx_psp_name'), ['psp_name'], unique=False)
        batch_op.create_index(batch_op.f('idx_psp_date'), ['date'], unique=False)

    with op.batch_alter_table('option', schema=None) as batch_op:
        batch_op.drop_index('idx_option_is_active')
        batch_op.drop_index('idx_option_field_name')
        batch_op.create_index(batch_op.f('idx_option_value'), ['value'], unique=False)
        batch_op.create_index(batch_op.f('idx_option_field'), ['field_name'], unique=False)
        batch_op.create_index(batch_op.f('idx_option_active'), ['is_active'], unique=False)

    with op.batch_alter_table('exchange_rates', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('is_manual_override', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True))
        batch_op.add_column(sa.Column('date', sa.DATE(), nullable=False))
        batch_op.add_column(sa.Column('data_quality', sa.VARCHAR(length=50), server_default=sa.text("'closing_price'"), nullable=True))
        batch_op.add_column(sa.Column('override_reason', sa.VARCHAR(length=200), nullable=True))
        batch_op.drop_index(batch_op.f('ix_exchange_rates_currency_pair'))
        batch_op.drop_index('idx_currency_pair_created')
        batch_op.drop_index('idx_currency_pair_active')
        batch_op.drop_index('idx_created_at')
        batch_op.create_index(batch_op.f('idx_exchange_rate_source'), ['source'], unique=False)
        batch_op.create_index(batch_op.f('idx_exchange_rate_manual_override'), ['is_manual_override'], unique=False)
        batch_op.create_index(batch_op.f('idx_exchange_rate_date_currency'), ['date', 'currency_pair'], unique=False)
        batch_op.create_index(batch_op.f('idx_exchange_rate_date'), ['date'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('source',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'yfinance'"))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
        batch_op.drop_column('volume')
        batch_op.drop_column('ask_price')
        batch_op.drop_column('bid_price')
        batch_op.drop_column('is_active')

    with op.batch_alter_table('exchange_rate', schema=None) as batch_op:
        batch_op.drop_index('idx_exchange_rate_date')
        batch_op.create_index(batch_op.f('idx_exchange_usd'), ['usd_to_tl'], unique=False)
        batch_op.create_index(batch_op.f('idx_exchange_rate_date_optimized'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('idx_exchange_date'), ['date'], unique=False)

    with op.batch_alter_table('daily_balance', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_withdrawals', sa.NUMERIC(precision=15, scale=2), server_default=sa.text('(0.0)'), nullable=True))
        batch_op.add_column(sa.Column('total_deposits', sa.NUMERIC(precision=15, scale=2), server_default=sa.text('(0.0)'), nullable=True))
        batch_op.drop_constraint('uq_daily_balance_date_psp', type_='unique')
        batch_op.create_index(batch_op.f('idx_daily_balance_psp_optimized'), ['psp'], unique=False)
        batch_op.create_index(batch_op.f('idx_daily_balance_date_psp_optimized'), ['date', 'psp'], unique=False)
        batch_op.create_index(batch_op.f('idx_daily_balance_date_optimized'), ['date'], unique=False)
        batch_op.create_unique_constraint(batch_op.f('_date_psp_uc'), ['date', 'psp'])

    with op.batch_alter_table('custom_dictionary', schema=None) as batch_op:
        batch_op.drop_index('idx_custom_dict_source_target')
        batch_op.create_index(batch_op.f('idx_custom_dict_source_target'), ['source_language', 'target_language'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    op.create_table('reconciliation',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('psp', sa.VARCHAR(length=50), nullable=False),
    sa.Column('system_balance', sa.NUMERIC(precision=15, scale=2), nullable=False),
    sa.Column('external_balance', sa.NUMERIC(precision=15, scale=2), nullable=False),
    sa.Column('difference', sa.NUMERIC(precision=15, scale=2), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('admin_note', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reconciliation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_reconciliation_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('idx_reconciliation_psp'), ['psp'], unique=False)
        batch_op.create_index(batch_op.f('idx_reconciliation_date'), ['date'], unique=False)

    op.create_table('employee',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('department', sa.VARCHAR(length=50), nullable=False),
    sa.Column('working_status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('company_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('stage_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('net_salary', sa.NUMERIC(precision=15, scale=2), nullable=True),
    sa.Column('insurance', sa.BOOLEAN(), nullable=True),
    sa.Column('deducted_amount', sa.NUMERIC(precision=15, scale=2), nullable=True),
    sa.Column('advance', sa.NUMERIC(precision=15, scale=2), nullable=True),
    sa.Column('final_salary', sa.NUMERIC(precision=15, scale=2), nullable=True),
    sa.Column('usd_rate', sa.NUMERIC(precision=10, scale=4), nullable=True),
    sa.Column('salary_in_usd', sa.NUMERIC(precision=15, scale=2), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_employee_status'), ['working_status'], unique=False)
        batch_op.create_index(batch_op.f('idx_employee_department'), ['department'], unique=False)
        batch_op.create_index(batch_op.f('idx_employee_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('idx_employee_company'), ['company_name'], unique=False)

    op.create_table('translation',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('key', sa.TEXT(), nullable=False),
    sa.Column('value_en', sa.TEXT(), nullable=False),
    sa.Column('value_tr', sa.TEXT(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    # ### end Alembic commands ###
